name: InstallDependencies
description: 'Installs Go Downloads and installs Karpenter Dependencies'
inputs:
  k8sVersion:
    description: Kubernetes version to use when installing the toolchain
    default: "1.33.x"
  use-cache:
    description: 'Whether to cache dependencies'
    default: true
runs:
  using: "composite"
  steps:
    - uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6.0.0
      id: setup-go
      with:
        cache: ${{ inputs.use-cache == 'true' }}
        go-version-file: go.mod
        check-latest: true
        cache-dependency-path: "**/go.sum"
    # Root path permission workaround for caching https://github.com/actions/cache/issues/845#issuecomment-1252594999
    - run: sudo chown "$USER" /usr/local
      shell: bash
    - uses: actions/cache@0400d5f644dc74513175e3cd8d07132dd4860809 # v4.2.4
      id: cache-toolchain
      if: ${{ inputs.use-cache == 'true' }}
      with:
        path: |
          /usr/local/kubebuilder/bin
          ~/go/bin
        # Added go version to compensate for this issue with govulncheck: https://github.com/golang/go/issues/65590. Could re-evaluate if this is necessary once the
        # upstream go issue is corrected and if this is causing too many cache misses.
        key: ${{ runner.os }}-${{ inputs.k8sVersion }}-${{ steps.setup-go.outputs.go-version }}-toolchain-cache-${{ hashFiles('hack/toolchain.sh') }}
    - if: ${{ steps.cache-toolchain.outputs.cache-hit != 'true' }}
      shell: bash
      env:
        K8S_VERSION: ${{ inputs.k8sVersion }}
      run: make toolchain
