[settings.pki.big-bundle]
data = "LO, praise of the prowess of people-kings
of spear-armed Danes, in days long sped,
we have heard, and what honor the athelings won!
Oft Scyld the Scefing from squadroned foes,
from many a tribe, the mead-bench tore,
awing the earls. Since erst he lay
friendless, a foundling, fate repaid him:
for he waxed under welkin, in wealth he throve,
till before him the folk, both far and near,
who house by the whale-path, heard his mandate,
gave him gifts: a good king he!
To him an heir was afterward born,
a son in his halls, whom heaven sent
to favor the folk, feeling their woe
that erst they had lacked an earl for leader
so long a while; the Lord endowed him,
the Wielder of Wonder, with world’s renown.
Famed was this Beowulf: far flew the boast of him,
son of Scyld, in the Scandian lands.
So becomes it a youth to quit him well
with his father’s friends, by fee and gift,
that to aid him, aged, in after days,
come warriors willing, should war draw nigh,
liegemen loyal: by lauded deeds
shall an earl have honor in every clan.
Forth he fared at the fated moment,
sturdy Scyld to the shelter of God.
Then they bore him over to ocean’s billow,
loving clansmen, as late he charged them,
while wielded words the winsome Scyld,
the leader beloved who long had ruled....
In the roadstead rocked a ring-dight vessel,
ice-flecked, outbound, atheling’s barge:
there laid they down their darling lord
on the breast of the boat, the breaker-of-rings,   
by the mast the mighty one. Many a treasure
fetched from far was freighted with him.
No ship have I known so nobly dight
with weapons of war and weeds of battle,
with breastplate and blade: on his bosom lay
a heaped hoard that hence should go
far o’er the flood with him floating away.
No less these loaded the lordly gifts,
thanes’ huge treasure, than those had done
who in former time forth had sent him
sole on the seas, a suckling child.
High o’er his head they hoist the standard,
a gold-wove banner; let billows take him,
gave him to ocean. Grave were their spirits,
mournful their mood. No man is able
to say in sooth, no son of the halls,
no hero ‘neath heaven, — who harbored that freight!
Now Beowulf bode in the burg of the Scyldings,
leader beloved, and long he ruled
in fame with all folk, since his father had gone
away from the world, till awoke an heir,
haughty Healfdene, who held through life,
sage and sturdy, the Scyldings glad.
Then, one after one, there woke to him,
to the chieftain of clansmen, children four:
Heorogar, then Hrothgar, then Halga brave;
and I heard that — was —’s queen,
the Heathoscylfing’s helpmate dear.
To Hrothgar was given such glory of war,
such honor of combat, that all his kin
obeyed him gladly till great grew his band
of youthful comrades. It came in his mind
to bid his henchmen a hall uprear,
a master mead-house, mightier far
than ever was seen by the sons of earth,
and within it, then, to old and young
he would all allot that the Lord had sent him,
save only the land and the lives of his men.
Wide, I heard, was the work commanded,
for many a tribe this mid-earth round,
to fashion the folkstead. It fell, as he ordered,
in rapid achievement that ready it stood there,
of halls the noblest: Heorot   he named it
whose message had might in many a land.
Not reckless of promise, the rings he dealt,
treasure at banquet: there towered the hall,
high, gabled wide, the hot surge waiting
of furious flame.   Nor far was that day
when father and son-in-law stood in feud
for warfare and hatred that woke again.   
With envy and anger an evil spirit
endured the dole in his dark abode,
that he heard each day the din of revel
high in the hall: there harps rang out,
clear song of the singer. He sang who knew
tales of the early time of man,
how the Almighty made the earth,
fairest fields enfolded by water,
set, triumphant, sun and moon
for a light to lighten the land-dwellers,
and braided bright the breast of earth
with limbs and leaves, made life for all
of mortal beings that breathe and move.
So lived the clansmen in cheer and revel
a winsome life, till one began
to fashion evils, that field of hell.
Grendel this monster grim was called,
march-riever mighty, in moorland living,
in fen and fastness; fief of the giants
the hapless wight a while had kept
since the Creator his exile doomed.
On kin of Cain was the killing avenged
by sovran God for slaughtered Abel.
Ill fared his feud, and far was he driven,
for the slaughter’s sake, from sight of men.
Of Cain awoke all that woful breed,
Etins   and elves and evil-spirits,
as well as the giants that warred with God
weary while: but their wage was paid them!
WENT he forth to find at fall of night
that haughty house, and heed wherever
the Ring-Danes, outrevelled, to rest had gone.
Found within it the atheling band
asleep after feasting and fearless of sorrow,
of human hardship. Unhallowed wight,
grim and greedy, he grasped betimes,
wrathful, reckless, from resting-places,
thirty of the thanes, and thence he rushed
fain of his fell spoil, faring homeward,
laden with slaughter, his lair to seek.
Then at the dawning, as day was breaking,
the might of Grendel to men was known;
then after wassail was wail uplifted,
loud moan in the morn. The mighty chief,
atheling excellent, unblithe sat,
labored in woe for the loss of his thanes,
when once had been traced the trail of the fiend,
spirit accurst: too cruel that sorrow,
too long, too loathsome. Not late the respite;
with night returning, anew began
ruthless murder; he recked no whit,
firm in his guilt, of the feud and crime.
They were easy to find who elsewhere sought
in room remote their rest at night,
bed in the bowers,   when that bale was shown,
was seen in sooth, with surest token, —
the hall-thane’s   hate. Such held themselves
far and fast who the fiend outran!
Thus ruled unrighteous and raged his fill
one against all; until empty stood
that lordly building, and long it bode so.
Twelve years’ tide the trouble he bore,
sovran of Scyldings, sorrows in plenty,
boundless cares. There came unhidden
tidings true to the tribes of men,
in sorrowful songs, how ceaselessly Grendel
harassed Hrothgar, what hate he bore him,
what murder and massacre, many a year,
feud unfading, — refused consent
to deal with any of Daneland’s earls,
make pact of peace, or compound for gold:
still less did the wise men ween to get
great fee for the feud from his fiendish hands.
But the evil one ambushed old and young
death-shadow dark, and dogged them still,
lured, or lurked in the livelong night
of misty moorlands: men may say not
where the haunts of these Hell-Runes   be.
Such heaping of horrors the hater of men,
lonely roamer, wrought unceasing,
harassings heavy. O’er Heorot he lorded,
gold-bright hall, in gloomy nights;
and ne’er could the prince   approach his throne,
— ‘twas judgment of God, — or have joy in his hall.
Sore was the sorrow to Scyldings’-friend,
heart-rending misery. Many nobles
sat assembled, and searched out counsel
how it were best for bold-hearted men
against harassing terror to try their hand.
Whiles they vowed in their heathen fanes
altar-offerings, asked with words   
that the slayer-of-souls would succor give them
for the pain of their people. Their practice this,
their heathen hope; ‘twas Hell they thought of
in mood of their mind. Almighty they knew not,
Doomsman of Deeds and dreadful Lord,
nor Heaven’s-Helmet heeded they ever,
Wielder-of-Wonder. — Woe for that man
who in harm and hatred hales his soul
to fiery embraces; — nor favor nor change
awaits he ever. But well for him
that after death-day may draw to his Lord,
and friendship find in the Father’s arms!
THUS seethed unceasing the son of Healfdene
with the woe of these days; not wisest men
assuaged his sorrow; too sore the anguish,
loathly and long, that lay on his folk,
most baneful of burdens and bales of the night.
This heard in his home Hygelac’s thane,
great among Geats, of Grendel’s doings.
He was the mightiest man of valor
in that same day of this our life,
stalwart and stately. A stout wave-walker
he bade make ready. Yon battle-king, said he,
far o’er the swan-road he fain would seek,
the noble monarch who needed men!
The prince’s journey by prudent folk
was little blamed, though they loved him dear;
they whetted the hero, and hailed good omens.
And now the bold one from bands of Geats
comrades chose, the keenest of warriors
e’er he could find; with fourteen men
the sea-wood   he sought, and, sailor proved,
led them on to the land’s confines.
Time had now flown;   afloat was the ship,
boat under bluff. On board they climbed,
warriors ready; waves were churning
sea with sand; the sailors bore
on the breast of the bark their bright array,
their mail and weapons: the men pushed off,
on its willing way, the well-braced craft.
Then moved o’er the waters by might of the wind
that bark like a bird with breast of foam,
till in season due, on the second day,
the curved prow such course had run
that sailors now could see the land,
sea-cliffs shining, steep high hills,
headlands broad. Their haven was found,
their journey ended. Up then quickly
the Weders’   clansmen climbed ashore,
anchored their sea-wood, with armor clashing
and gear of battle: God they thanked
for passing in peace o’er the paths of the sea.
Now saw from the cliff a Scylding clansman,
a warden that watched the water-side,
how they bore o’er the gangway glittering shields,
war-gear in readiness; wonder seized him
to know what manner of men they were.
Straight to the strand his steed he rode,
Hrothgar’s henchman; with hand of might
he shook his spear, and spake in parley.
“Who are ye, then, ye armed men,
mailed folk, that yon mighty vessel
have urged thus over the ocean ways,
here o’er the waters? A warden I,
sentinel set o’er the sea-march here,
lest any foe to the folk of Danes
with harrying fleet should harm the land.
No aliens ever at ease thus bore them,
linden-wielders:   yet word-of-leave
clearly ye lack from clansmen here,
my folk’s agreement. — A greater ne’er saw I
of warriors in world than is one of you, —   
yon hero in harness! No henchman he
worthied by weapons, if witness his features,
his peerless presence! I pray you, though, tell
your folk and home, lest hence ye fare
suspect to wander your way as spies
in Danish land. Now, dwellers afar,
ocean-travellers, take from me
simple advice: the sooner the better
I hear of the country whence ye came.”
To him the stateliest spake in answer;
the warriors’ leader his word-hoard unlocked:—
“We are by kin of the clan of Geats,
and Hygelac’s own hearth-fellows we.
To folk afar was my father known,
noble atheling, Ecgtheow named.
Full of winters, he fared away
aged from earth; he is honored still
through width of the world by wise men all.
To thy lord and liege in loyal mood
we hasten hither, to Healfdene’s son,
people-protector: be pleased to advise us!
To that mighty-one come we on mickle errand,
to the lord of the Danes; nor deem I right
that aught be hidden. We hear — thou knowest
if sooth it is — the saying of men,
that amid the Scyldings a scathing monster,
dark ill-doer, in dusky nights
shows terrific his rage unmatched,
hatred and murder. To Hrothgar I
in greatness of soul would succor bring,
so the Wise-and-Brave   may worst his foes, —
if ever the end of ills is fated,
of cruel contest, if cure shall follow,
and the boiling care-waves cooler grow;
else ever afterward anguish-days
he shall suffer in sorrow while stands in place
high on its hill that house unpeered!”
Astride his steed, the strand-ward answered,
clansman unquailing: “The keen-souled thane
must be skilled to sever and sunder duly
words and works, if he well intends.
I gather, this band is graciously bent
to the Scyldings’ master. March, then, bearing
weapons and weeds the way I show you.
I will bid my men your boat meanwhile
to guard for fear lest foemen come, —
your new-tarred ship by shore of ocean
faithfully watching till once again
it waft o’er the waters those well-loved thanes,
— winding-neck’d wood, — to Weders’ bounds,
heroes such as the hest of fate
shall succor and save from the shock of war.”
They bent them to march, — the boat lay still,
fettered by cable and fast at anchor,
broad-bosomed ship. — Then shone the boars   
over the cheek-guard; chased with gold,
keen and gleaming, guard it kept
o’er the man of war, as marched along
heroes in haste, till the hall they saw,
broad of gable and bright with gold:
that was the fairest, ‘mid folk of earth,
of houses ‘neath heaven, where Hrothgar lived,
and the gleam of it lightened o’er lands afar.
The sturdy shieldsman showed that bright
burg-of-the-boldest; bade them go
straightway thither; his steed then turned,
hardy hero, and hailed them thus:—
“Tis time that I fare from you. Father Almighty
in grace and mercy guard you well,
safe in your seekings. Seaward I go,
‘gainst hostile warriors hold my watch.”
STONE-BRIGHT the street:   it showed the way
to the crowd of clansmen. Corselets glistened
hand-forged, hard; on their harness bright
the steel ring sang, as they strode along
in mail of battle, and marched to the hall.
There, weary of ocean, the wall along
they set their bucklers, their broad shields, down,
and bowed them to bench: the breastplates clanged,
war-gear of men; their weapons stacked,
spears of the seafarers stood together,
gray-tipped ash: that iron band
was worthily weaponed! — A warrior proud
asked of the heroes their home and kin.
“Whence, now, bear ye burnished shields,
harness gray and helmets grim,
spears in multitude? Messenger, I,
Hrothgar’s herald! Heroes so many
ne’er met I as strangers of mood so strong.
‘Tis plain that for prowess, not plunged into exile,
for high-hearted valor, Hrothgar ye seek!”
Him the sturdy-in-war bespake with words,
proud earl of the Weders answer made,
hardy ‘neath helmet:—”Hygelac’s, we,
fellows at board; I am Beowulf named.
I am seeking to say to the son of Healfdene
this mission of mine, to thy master-lord,
the doughty prince, if he deign at all
grace that we greet him, the good one, now.”
Wulfgar spake, the Wendles’ chieftain,
whose might of mind to many was known,
his courage and counsel: “The king of Danes,
the Scyldings’ friend, I fain will tell,
the Breaker-of-Rings, as the boon thou askest,
the famed prince, of thy faring hither,
and, swiftly after, such answer bring
as the doughty monarch may deign to give.”
Hied then in haste to where Hrothgar sat
white-haired and old, his earls about him,
till the stout thane stood at the shoulder there
of the Danish king: good courtier he!
Wulfgar spake to his winsome lord:—
“Hither have fared to thee far-come men
o’er the paths of ocean, people of Geatland;
and the stateliest there by his sturdy band
is Beowulf named. This boon they seek,
that they, my master, may with thee
have speech at will: nor spurn their prayer
to give them hearing, gracious Hrothgar!
In weeds of the warrior worthy they,
methinks, of our liking; their leader most surely,
a hero that hither his henchmen has led.”
HROTHGAR answered, helmet of Scyldings:—
“I knew him of yore in his youthful days;
his aged father was Ecgtheow named,
to whom, at home, gave Hrethel the Geat
his only daughter. Their offspring bold
fares hither to seek the steadfast friend.
And seamen, too, have said me this, —
who carried my gifts to the Geatish court,
thither for thanks, — he has thirty men’s
heft of grasp in the gripe of his hand,
the bold-in-battle. Blessed God
out of his mercy this man hath sent
to Danes of the West, as I ween indeed,
against horror of Grendel. I hope to give
the good youth gold for his gallant thought.
Be thou in haste, and bid them hither,
clan of kinsmen, to come before me;
and add this word, — they are welcome guests
to folk of the Danes.” [To the door of the hall
Wulfgar went] and the word declared:—
“To you this message my master sends,
East-Danes’ king, that your kin he knows,
hardy heroes, and hails you all
welcome hither o’er waves of the sea!
Ye may wend your way in war-attire,
and under helmets Hrothgar greet;
but let here the battle-shields bide your parley,
and wooden war-shafts wait its end.”
Uprose the mighty one, ringed with his men,
brave band of thanes"

